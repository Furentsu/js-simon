// Asking the user how many numbers he/she is willing to try to remember.
let numbersToBeGenerated = parseInt(prompt("Choose how many numbers you want to be generated by the computer:"))

// Saving the chosen numbers into a variable.
let selectedNumbers = randomNumberGenerator(numbersToBeGenerated, 1, 100);
alert(selectedNumbers);

// After 30 seconds, asking the user to remember the numbers that have just been displayed in the previous alert message.
let startGame = setTimeout(function() {
    let userArray = getUserInput(numbersToBeGenerated);
    finalResult(selectedNumbers, userArray);
}, 30000);



// FUNCTIONS

// Function needed to generate and show the user some random numbers within a fixed interval, given the user's first input.
function randomNumberGenerator(num, min, max) {
    let generatedArray = [];
    while (generatedArray.length < num) {
        let generatedNumber = (Math.floor(Math.random() * (max - min + 1)) + min);
        if (!(generatedArray.includes(generatedNumber))) {
            generatedArray.push(generatedNumber);
        }
    }
    return generatedArray;
} 

// Function needed to prompt the user repeatedly for at least n times, where n = length of the array populated by randomly generated numbers (i.e first user's input, stored in the variable "numbersToBeGenerated").
function getUserInput(num) {
    let userArray = [];
    while (userArray.length < num) {
        let userInput = prompt("Try to remember all the numbers you have just seen!")
        if (!(userArray.includes(userInput))) {
            userArray.push(userInput);
        }
    }
    return userArray;
}

// Function needed to evaluate and display the final result.
function finalResult(originalArray, userArray) {
    let gotNumbers = [];
    for (i=0; i < originalArray.length; i++) {
        for (j=0; j < userArray.length; j++) {
            if (originalArray[i] == userArray[j])
            gotNumbers.push(userArray[j])
        }
    }
    alert("You got " + gotNumbers.length + " numbers correctly: " + gotNumbers.toString())
}